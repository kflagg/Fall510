\documentclass[12pt]{article}
\usepackage[utf8]{inputenc}
\usepackage{graphicx}
\usepackage{amsmath}
\usepackage{float}

\setlength{\textwidth}{6.5in}
\setlength{\textheight}{9in}
\setlength{\oddsidemargin}{0in}
\setlength{\evensidemargin}{0in}
\setlength{\topmargin}{-1.5cm}
\setlength{\maxwidth}{6.5in}

\title{\vspace{-2.0cm}The effect of nitrogen application time on infection and development of the Wheat Streak Mosaic Virus (WSMV)}
\author{Leslie Gains-Germain, Kenny Flagg}
\date{Fall 2015}

\begin{document}
<<setup, include=FALSE, cache=FALSE,echo=FALSE>>=
require(knitr)
opts_chunk$set(fig.width = 10, fig.height = 4, out.width = '\\linewidth',
               out.height = '0.4\\linewidth', dev = 'pdf',
               concordance = TRUE,
               tidy.opts = list(width.cutoff = 60, keep.blank.line=FALSE),
               size = 'footnotesize')
options(replace.assign = TRUE, width = 112, digits = 3, max.print = '202',
        show.signif.stars = FALSE)
knit_theme$set('print')

require(xtable)
#require(foreign)
#require(arm)
require(tabplot)
require(car)
require(lme4)
require(lattice)
@

<<data,echo=FALSE>>=
# Read and set up the data
#for leslie
#setwd("~/Documents/ConsultingFall2015/Fall510")
fert2 <- read.csv("fert2.csv")

# This forces the constraint that the block effects sum to 0
contrasts(fert2$block) <- contr.sum(6, contrast=TRUE)

# Correctly order nitrogen application levels
fert2$n.trt <- relevel(fert2$n.application, "FALL")

# If status=INOC is the most interesting case, make INOC the baseline
fert2$status2 <- relevel(fert2$status, "INOC")

# If YSTN is the variety we want to know about the most, make it baseline
fert2$variety2 <- relevel(fert2$variety, "YSTN")

# Create a row factor
fert2$row <- with(fert2, interaction(variety, block))

# Create a plot factor
fert2$plot <- factor(1:180)

# Combine nitrogen and inoc/cntl (for the heatmap labels)
fert2$n.status <- with(fert2, interaction(n.trt, status))
@

<<fakedata,echo=FALSE>>=
# Create some fake data with no differences anywhere
set.seed(983724)
fert.sim1 <- data.frame(expand.grid(
  "status" = c("CNTL", "INOC"),
  "n.application" = c("FALL", "EARLY SPRING", "LATE SPRING"),
  "variety" = c("Var1", "Var2", "Var3", "Var4", "Var5"),
  "block" = LETTERS[1:6],
  "total" = 30),
  "infected" = rnbinom(180, 4, 7/9))
#  "infected" = sample(fert2$infected, 180, replace = TRUE))
@

<<fakepre,echo=FALSE>>=
# Correctly order nitrogen application levels, the default is alphabetical
fert.sim1$n.trt <- relevel(fert.sim1$n.application, "FALL")

# If status=INOC is the most interesting case, make INOC the baseline
fert.sim1$status2 <- relevel(fert.sim1$status, "INOC")

# This forces the constraint that the block effects sum to 0
contrasts(fert.sim1$block) <- contr.sum(6, contrast=TRUE)
@

\maketitle
\tableofcontents

\newpage

\section{Introduction}

\noindent Nar B. Ranabhat is a PhD candidate in the Department of Land Resources and Environmental Science. He is currently working on several projects regarding the spread and development of the Wheat Streak Mosaic Virus (WSMV) in Winter Wheat. Nar has taken Statistics $511$ and $512$ here at Montana State University, and he is currently sitting in on Mixed Models. Nar has asked for our help in building a model, fitting it in R, and interpreting the results. In this report we describe the study and its potential issues, present our recommendations, and provide example R code.

\section{Objectives and Questions}
\noindent Nar is interested in the effect of variety, nitrogen application time, and inoculation on the probability of virus infection in Winter Wheat. He is primarily interested in the effect of nitrogen application time, and he wants to assess evidence for all possible two and three way interactions. Nar's goal is to select the simplest possible model, and then use this model to describe the effects of the above variables. \\

\noindent We address the following questions in this report. The first three questions are related to model selection, and the last question is related to interpretation after a model is selected.
\begin{itemize}
\item Is there evidence that the interaction between nitrogen application and variety differs between inoculated and control plots?
\item Is there evidence that the nitrogen application effect varies across varieties? Is there evidence that the nitrogen application effect differs between inoculated and control?
\item Is there evidence that the variety effect differs between inoculated and control?
\item Conditional on the results to the above questions, how do we appropriately describe the estimated effects for variety, nitrogen application time, and inoculation on the probability of virus infection?
\end{itemize}

\section{Study Design/Data collection}

Nar conducted this experiment in a MSU field at the base of the Bridger Mountains. He divided the field into six $31.5$ by $27.5$ meter blocks. The blocks were then divided into five rows, with $5$ meters of space between each row. Each row was randomly assigned to a variety of Winter Wheat with separate randomizations in each block. Three of the chosen varieties are known to be resistant to WSMV (SNMS, TAM 112, and MACE). The pronghorn variety (PRHG) is known to be susceptible to WSMV. The last variety, Yellowstone (YSTN), is a common variety in Montana, and its susceptibility to WSMV is unknown. \\

\noindent After assigning rows to varieties, the rows were then divided into six $1.5$ by $5$ meter plots. Each plot was randomly assigned to one of six combinations of nitrogen application time and inoculation status, with separate randomizations in each row. The combinations were fall/inoculated, fall/control, early spring/inoculated, early spring/control, late spring/inoculated, and late spring/control. \\

\noindent Plots assigned to the inoculated treatment had five infected plants transplanted to the middle of the plot. These plants were infected in the greenhouse by clipping an infected leaf to the healthy plant. The plants were infected in the tillering stage of their life cycle at an age of about one month. The Wheat Streak Mosaic Virus is transmitted by the wheat curl mite, tiny organisms that are nearly invisible to the naked eye. They can easily move from leaf to leaf on a plant, and they are transported from plant to plant by the wind  (Sloderbeck $2008$). It is conceivable that the mites on the infected plants introduced to the inoculated plots could move to healthy plants within that plot. But, Nar says that it is nearly impossible for the mites to move from an inoculated plot to a non-inoculated plot with such a low population of mites. Plants with the virus in non-inoculated plots are assumed to have been infected by mites in the surrounding environment. \\

\noindent All plots were planted in mid-September and allowed to grow over the winter. The following spring and summer, $30$ leaves were picked from different plants within each plot and taken to the lab to be tested for presence of the virus. The selection of the leaves from each plot was not random nor technically systematic. The six technicians were instructed to collect a sample of plants spread evenly throughout the plot. There is no possibility of visual bias because the symptoms are not heavy enough in this area of Montana for the plants to show clear visual evidence of the virus. \\

\noindent The sampling was all done in one day on two occasions. The first sampling date occurred at the end of May when the plants were in the tillering stage, and the second sampling date occurred in early July when plants were in the flowering stage. In the first year of the study, $2013-2014$, all plots were sampled on both dates. In the second year of the study, only plots with susceptible varieties were sampled on the first date, and all plots were sampled on the second date. The advice given in this report is only for analysis of the data collected on the second date in July. After the leaves were picked in the field, they were sent to the lab and screened for the virus via the ELISA procedure. The data are collected and organized in a spreadsheet for the first year. The second year leaves are currently stored in Ziploc bags in the freezer and are waiting to be analyzed in the lab. The researchers do not expect this waiting period to affect their ability to detect the virus. \\

\noindent This is a three year study, and planting for the third year of the study is currently taking place. Each year, the assignment of varieties to rows and treatments to plots is re-randomized. Furthermore, planting takes place in the gaps between the plots from the previous year.

\section{Recommendations}

\subsection{Potential Issues with Count Data}

The response variable is the count of infected leaves out of the 30 leaves
collected in each plot. The standard approach to analyzing count data is
to use a Binomial distribution and model the probability \(p_i\) that a leaf
in a given plot \(i\) will get infected. This modeling occurs on the scale
of the log-odds, \(\mathrm{logit}(p_i)=\log\left(\frac{p_i}{1-p_i}\right)\). \\

\noindent One serious problem that can occur when working with counts is
separation. This is when one variable or a combination of factors
is perfectly associated with the response. For example, if a certain
treatment results in an infection count of zero, then knowing that a leaf
received that treatment determines that the leaf will not get infected,
regardless of other variables. This causes difficulty in estimating the
effect of that treatment on the infection rate, and results in a large standard
error because the effect cannot be precisely determined. \\

\noindent Figure 1 provides a visual illustration of the
separation problem. The left panel shows a small probability on the
vertical axis and its corresponding logit value on the horizontal axis.
The right panel zooms in on the lower left corner. The dotted lines show
how a small amount of uncertainty on the probability scale translates to
a relatively larger amount of uncertainty on the logit scale. \\

\begin{figure}[h!]
\label{sep}
\begin{center}
\caption{Illustration of separation.}
<<separation,echo=FALSE,out.height='0.3\\linewidth',fig.height=3>>=
par(mfrow = c(1, 2), mar = c(4, 4, 2, 2))
curve(exp(x)/(1+exp(x)), from = -10, to = 10, ylim = c(0, 1),
      xlab = expression(logit(p[i])), ylab = expression(p[i]))
segments(x0 = -10, x1 = log(1/59), y0 = 1/60, lty = 2, lwd = 2)
segments(x0 = log(1/59), y0 = 0, y1 = 1/60, lty = 2, lwd = 2)

curve(exp(x)/(1+exp(x)), from = -10, to = -2, ylim = c(0, 0.4),
      xlab = expression(logit(p[i])), ylab = expression(p[i]))
segments(x0 = -10, x1 = log(1/59), y0 = 1/60, lty = 2, lwd = 2)
segments(x0 = log(1/59), y0 = 0, y1 = 1/60, lty = 2, lwd = 2)
segments(x0 = -10, x1 = log(1/39), y0 = 1/40, lty = 3, lwd = 1)
segments(x0 = log(1/39), y0 = 0, y1 = 1/40, lty = 3, lwd = 1)
segments(x0 = -10, x1 = log(1/119), y0 = 1/120, lty = 3, lwd = 1)
segments(x0 = log(1/119), y0 = 0, y1 = 1/120, lty = 3, lwd = 1)
@
\end{center}
\end{figure}

\noindent The problem gets worse if the infected count is 0. In that
case, the best estimate of the infection probability is 0, and
\(\mathrm{logit}(0)=-\infty\). This will cause computational problems
because the software will try to improve the model fit by decreasing
the effect estimate toward \(-\infty\). The software may fail to find a
solution, and if it does report a solution, the standard error will be
large because the solution cannot be found precisely. \\

\noindent The following sections present examples of issues that could
arise while analyzing Nar's data, and our recommendations on dealing with
them. Except where stated otherwise, the examples use simulated datasets.

\subsection{Graphical Data Exploration}

\noindent Before fitting a model, we recommend starting by creating plots
for exploratory data analysis. This is useful for seeing which interactions
may be present, and for identifying patterns that may represent violations
of assumptions or potential computational problems. \\

\noindent A good way to visually compare varieties, treatments, and
inoculation status is with boxplots of infection counts for each
combination of factor levels. The \verb|qplot| function in the
\verb|ggplot2| package is a simple way to do this. \\

\begin{figure}[h!]
\label{qp}
\caption{Example interaction plot using \texttt{qplot}.}
<<interactionplot,echo=FALSE,message=FALSE,out.height='0.3\\linewidth',fig.height=3>>=
require(ggplot2)
qplot(x = n.trt, y = infected, geom = c("boxplot", "point"), color = status,
      facets = .~variety, data = fert.sim1) +
  theme(axis.text.x = element_text(angle = 90))
@
\end{figure}

\noindent A graphical analysis is also a good way to see if separation
is present in the data. In Nar's dataset, 67 of the 180 counts are
0. This is a large fraction of the data, so it is very important to identify
possible separation. We recommend sorting the data and creating a
heatmap to look for patterns of zeros. Figure 3 shows an example using
simulated data. The most serious problems will come from the zeros, so we
chose a contrasting color (black) for plots with infection counts of 0.
The R code to produce this graphic appears in the appendix. \\

\begin{figure}[h!]
\label{hm}
\caption{Example heatmap visualization for identifying patterns of zeros.}
<<heatmap,echo=FALSE,message=FALSE,out.height='0.3\\linewidth',fig.height=3>>=
## Heatmap with meaningful ordering

# Order the dataset, using the arrange function from the dplyr package
require(dplyr)
fert.ordered <- arrange(fert.sim1, variety, block, status, n.trt)

# Create a matrix of the arranged responses
infected.arranged <- matrix(fert.ordered$infected, ncol = 6, byrow = TRUE)

# Set up two panels, right one for a legend
layout(t(1:2), widths = c(9, 1))

# Plot the heatmap, with zeros in black and segments separating the blocks
par(mar = c(3, 10, 6, 2)) # Set big margins
image(z = infected.arranged, y = 1:6,

      # Variety blocks are 1 unit wide, centered at 0.5, 1.5, etc
      x = seq(0.5, 5.5, 1/6),

      # Use black for 0, and use heatmap colors (red-orange-yellow-white) for 1 to 30
      col = c("black", heat.colors(30)), zlim = c(0, 30),

      # Don't automatically create axes or labels
      xlab = "", ylab = "", yaxt = "n", xaxt = "n")

# Use white line segments to visually separate the varieties
segments(x0 = 1.5:4.5, y0 = 0.5, y1 = 6.5, col = "white")

# Place a title at the top, and label Varieties, treatment:status levels, and blocks around the image
title("Infection Counts", line = 4)
axis(3, labels = rep(levels(fert.ordered$block), 5), cex.axis = 0.75,

     # Each block is plotted in a column with width 1/6, so put the labels in the middle
     at = seq(7/12, 5 + 5/12, 1/6))
axis(2, labels = levels(with(fert.ordered, interaction(n.trt, status))), at = 1:6, las = 2)
axis(1, labels = levels(fert.ordered$variety), at = 1:5)

# Legend
par(mar = c(3, 1, 6, 2))
image(y = seq(-0.5, 30.5, 1), z = matrix(0:30, nrow = 1), axes = FALSE, ylab = "",
      col = c("#000000", heat.colors(30)), zlim = c(0, 30))
title("Legend", line = 1.5)
axis(4)
@
\end{figure}

\noindent Any treatment or variety with many black squares is a reason
for concern. In the example, all but one of the inoculated fall-application
plots for Var1 had counts of 0. The software will have difficulty estimating
the the three-way interaction involving fall nitrogen application and
variety 1. \\

\noindent If a treatment has many zeros across all varieties or a variety
has many zeros, Nar should consider whether he has reason to believe
that treatment or variety has qualitative differences from the others
that would cause it to have a much lower infection rate. These data would
be considered as coming from a different population than the data with
fewer zeros. \textbf{If and only if it is justified}, Nar could omit all
of the data for this treatment or variety when fitting the model. The scope
of inference for this model must then be limited to varieties and
treatments that have a nonzero infection rate. \\

\noindent The graphic could be presented as evidence that the omitted
data does not fit the same model as the data with higher infection counts.
A separate analysis would be needed if additional information is desired
about the more resistant population. \\

\noindent If information about the physical layout of the field is
available, it would be possible to construct a similar heatmap to look
for spatial patterns. If correlation between nearby plots is seen,
the model should be modified to account for this.

\subsection{Quasibinomial Generalized Linear Model}

\noindent We recommend starting with a quasibinomial generalized linear
model. This model includes a three-way interaction to estimate the
infection probability for each variety/treatment/inoculation status
combination, and a block/variety interaction to control for differences
between blocks and between rows in the same block.\\

\noindent The model is
$$
y_i\sim\text{overdispersed Binomial}(30, p_i, \omega),
$$
\begin{align*}
\mathrm{logit}(p_i)&=\mu+\alpha_{b[i]}+\beta_{v[i]}
+\gamma_{t[i]}+\delta_{j[i]}\\
&\quad+(\alpha\beta)_{b[i],v[i]}+(\beta\gamma)_{v[i],t[i]}
+(\beta\delta)_{v[i],j[i]}+(\gamma\delta)_{t[i],j[i]}
+(\beta\gamma\delta)_{v[i],t[i],j[i]}
\end{align*}
where
\begin{itemize}
\item \(p_i\) is the probability of infection in the \(i\)th plot,
\item \(\mathrm{logit}(p_i)=\log\left(\dfrac{p_i}{1-p_i}\right)\) is the
natural logarithm of the odds of infection, and
\item \(b[i]\), \(v[i]\), \(t[i]\), and \(j[i]\) index the block,
variety, nitrogen application timing, and inoculation status of
observation \(i\),
\item \(\omega\) is an overdispersion parameter, so that the variance
of the response in plot \(i\) is \(30\omega p_i(1-p_i)\).
\end{itemize}

\noindent The assumptions for this model are that plants within a plot
are independent and have the same probability of being infected, and
that plots are independent given the other variables in the model. \\

\noindent The overdispersion parameter accounts for slight violations
of these assumptions. We expect the plants within a single plot to
have different infection probabilities based on their proximity to
plants where mites are present. This issue manifests itself in the form
of excess variation because the probability that a particular plant
gets infected will not be the same as the estimated probability for
plants in its plot. The overdispersion is an estimate of this extra
variability; without it the standard errors will be underestimated. \\

\subsection{Binomial Generalized Linear Mixed Model}
\label{model2}

\noindent Another option is to use random effects to model the nested
structure of row within block. This model includes a three-way
interaction of fixed effects and does not include an overdispersion
parameter. In mixed models, the random effects are meant to explain
all the variation in the data, so overdispersed models are not
used in this setting. \\

\noindent The model is
$$
y_i\sim\mathrm{Binomial}(30, p_i),
$$
\begin{align*}
\mathrm{logit}(p_i)&=\mu+a_{b[i]}+(ab)_{b[i],v[i]}
+\beta_{v[i]}+\gamma_{t[i]}+\delta_{j[i]}\\
&\quad+(\alpha\beta)_{b[i],v[i]}+(\beta\gamma)_{v[i],t[i]}
+(\beta\delta)_{v[i],j[i]}+(\gamma\delta)_{t[i],j[i]}
+(\beta\gamma\delta)_{v[i],t[i],j[i]}
\end{align*}
where
\begin{itemize}
\item \(p_i\) is the probability of infection in the \(i\)th plot,
\item \(\mathrm{logit}(p_i)=\log\left(\dfrac{p_i}{1-p_i}\right)\) is the
natural logarithm of the odds of infection, and
\item \(b[i]\), \(v[i]\), \(t[i]\), and \(j[i]\) index the block,
variety, nitrogen application timing, and inoculation status of
observation \(i\),
\item \(a_b\sim\mathrm{N}(0,\sigma^2_a)\) and
\((ab)_{b,v}\sim\mathrm{N}(0,\sigma^2_{ab})\) are random adjustments for
each block and each variety within each block.
\end{itemize}

\noindent The assumptions for this model are that plants within a plot
are independent and have the same probability of being infected, that
blocks are independent, that rows in different blocks are independent, that
plots in different rows are independent given the other variables in the
model, and that there are no additional sources of variation besides
block, row, and the Binomial distribution for the infection counts. \\

\noindent This model accounts for block-to-block and row-to-row variation
by including variance terms for the block and row random effects. The
benefit of this is that the amount of variation described by the blocks
and rows will be estimated. The drawback is that, if there is additional
variation not explained by these random effects, the model will fit poorly.

\subsection{Advantage of the Quasibinomial Generalized Linear Model over the Binomial Generalized Linear Mixed Model}

\noindent There are several reasons why we recommend using a fixed-effects
generalized linear model instead of a generalized linear mixed model in this report. These reasons are related to overdispersion and computational issues. \\

\noindent Since the inoculated plants were planted in the center of the
plots, we expect to see spatial dependence where plants near the centers
are more likely to become infected than plants further from the center.
Then individual plants could have infection probabilities that differ from
the infection rate estimated for the plot they are in. This would result
in the data having more variation than what the Binomial model accounts for,
a situation known as overdispersion. We observed overdispersion in Nar's
data, and mixed models have limited ability to account for overdispersion
beyond what can be explained by the variables in the model. Therefore,
the standard errors in the mixed model output would be based on an
incorrect estimate of the variance and might not be trustworthy. The standard errors in the GLMM model would be smaller than they should be, causing the p-values for effects of interest to be artificially small. This problem is easily remedied by using a quasibinomial fixed-effects GLM model. \\

\noindent We illustrate this problem in the output below. We fit a quasibinomial logistic regression model, and a binomial generalized linear mixed effects model to the real data sent to us by Nar (details on model fitting in section \ref{model} and \ref{glmmfit}). The coefficients, standard errors, and tests are shown for the three way interaction coefficients in each model. The estimates are similar between the two models, but the standard errors are much larger in the quasibinomial GLM model. Without accounting for overdispersion, the standard errors for the estimates in the mixed effects model are too small. For this reason, we advise Nar not to trust the results from the mixed effects model.

<<comparison, echo=FALSE, message=FALSE, results='asis'>>=
glmQBin.noSNMS <- glm(cbind(infected, total) ~ block*variety +
                        variety*n.trt*status2,
               family = quasibinomial, data = subset(fert2, variety != "SNMS"))
print(xtable(summary(glmQBin.noSNMS)$coefficients[39:44,], caption="Estimates, standard errors, and tests for three way interaction coefficients in the quasibinomial model.", label="qbin"), caption.placement="top", size="footnotesize", table.placement = getOption("xtable.table.placement", "H"))

noSNMS3way <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                    (1|block/row), subset = variety != "SNMS",
                    control = glmerControl(optimizer = "bobyqa"),
                    family = binomial, data = fert2)

print(xtable(summary(noSNMS3way)$coefficients[19:24,], caption="Estimates, standard errors, and tests for three way interaction coefficients in the GLMER model", label="glmer"), caption.placement="top", size="footnotesize", table.placement = getOption("xtable.table.placement", "H"))
@

\noindent Additionally, including many coefficients and nested effects
in a mixed model can cause computational problems where the software will
fail to find unique solutions for the parameters. These problems are made
worse in a binomial GLMM when the counts are small, as in these data. The
binomial GLM can avoid many of the computational difficulties associated
with the GLMM.  \\

\noindent Rows are nested within blocks in the study design, and each row is randomly assigned to a variety. The nesting structure of the design can be accounted for in a GLMM model  by including random effects for row and block. Originally, however, random effects were developed to reflect a feature of the study design. For example, if $10$ operators were chosen at random from a larger population of operators, {\it operator} would be modeled as a random effect. In this case, the sample of operators truly is random in the design, and the operators selected are intended to represent a larger population of operators. In Nar's study design, row and block are not truly random effects because they were not selected from a larger population of rows and blocks. It is important to recognize this and understand that the only reason row and block are included as random effects in the GLMM model is to account for the nesting structure of row within block. As a result, we think it is more appropriate to model the nested design using fixed effects in the binomial generalized linear model, and this strategy is more consistent with the study design. \\

\noindent The binomial GLM can correctly model the nested design through a block by variety interaction. In the GLM model, it is possible to include a \verb+block/variety+ term, and this is equivalent to including the \verb+block*variety+ interaction. Including this interaction accounts for the nesting because it allows the differences in varieties to vary by block.  \\

\noindent The main advantages of the GLMM is that it would estimate block-
and row-level variances, and it would require fewer degrees of freedom to account for the nesting structure in the design. It is our opinion that this is outweighed by the lack of an overdispersion estimate and the computational difficulties.

\pagebreak
\subsection{Fitting the GLM}
\label{model}

\noindent The following code will fit the three-way interaction model:

<<startingmodel,warning=FALSE,results='hide',cache=TRUE>>=
glm3way <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2,
               family = quasibinomial, data = fert.sim1)
@

\noindent The summary output should be examined for unexpectedly large
estimates or standard errors. A warning message may or may not appear in
this situation. If it is decided that certain observations come from an
extremely resistant population and can be omitted from the current analysis:

<<novar1,warning=FALSE,results='hide',cache=TRUE>>=
noVar1 <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2,
              family = quasibinomial, data = fert.sim1, subset = variety!="Var1")
@

\noindent If there is no interest in comparing between inoculated plots and
control plots, separate models could be fit:

<<separatemodels,warning=FALSE,results='hide',cache=TRUE>>=
onlyINOC <- glm(cbind(infected, total) ~ block*variety + variety*n.trt,
                family = quasibinomial, data = fert.sim1, subset = status=="INOC")

onlyCNTL <- glm(cbind(infected, total) ~ block*variety + variety*n.trt,
                family = quasibinomial, data = fert.sim1, subset = status=="CNTL")
@

<<models5,echo=FALSE,warning=FALSE,message=FALSE,results='hide',cache=TRUE>>=
glm3way2 <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2,
                family = quasibinomial, data = fert2)
summary(glm3way2)

glm2way2 <- glm(cbind(infected, total) ~ block*variety + (variety+n.trt+status2)^2,
                family = quasibinomial, data = fert2)
summary(glm2way2)

Anova(glm3way2, test.statistic = "F")
Anova(glm2way2, test.statistic = "F")
anova(glm2way2, glm3way2)
@

\subsection{Fitting the GLMM}
\label{glmmfit}

To fit the three-way interaction model:

<<glmm1,eval=FALSE>>=
glmm3way <- glmer(cbind(infected, total) ~ variety*n.trt*status2 + (1|block/variety),
                  control = glmerControl(optimizer = "bobyqa"),
                  family = binomial, data = fert.sim1)
@

\noindent The \verb|control = glmerControl(optimizer = "bobyqa")| argument
tells the \verb|glmer| function which numerical optimizer to use to find
the estimates. Several optimizers are included with R, but \verb|bobyqa|
works well on problems that are mathematically difficult. We recommend using
it for all \verb|glmer| fits. \\

\noindent The following warning message will probably appear:

<<glmmhide1,echo=FALSE,cache=TRUE>>=
glmm3way <- glmer(cbind(infected, total) ~ variety*n.trt*status2 + (1|block/variety),
                  control = glmerControl(optimizer = "bobyqa"),
                  family = binomial, data = fert.sim1)
@

\noindent This message alone does not indicate any problems, but it
appears because the model has a large number of parameters, which could
cause the numerical optimizer to take many iterations to converge. By
default, the algorithm will run for a maximum of 10,000 iterations. That
number can be increased by specifying a larger \verb|maxfun| option:

<<glmm2,eval=FALSE>>=
glmm3way <- glmer(cbind(infected, total) ~ variety*n.trt*status2 + (1|block/variety),
                  control = glmerControl(optimizer = "bobyqa",
                                         optCtrl = list("maxfun" = 20000)),
                  family = binomial, data = fert.sim1)
@

\noindent If a warning message says something like ``maximum number of
function evaluations exceeded'' or mentions ``max$\lvert$grad$\rvert$''
and a tolerance level, then the optimizer ran for the full number of
iterations without finding a solution. Increasing \verb|maxfun| as above
may solve the problem. \\

\noindent If messages about eigenvalues or ``unable to evaluate scaled
gradient'' occur:

<<glmmhide2,echo=FALSE,cache=TRUE>>=
glmmPlot <- glmer(cbind(infected, total) ~ variety*n.trt*status2 + (1|plot),
                  control = glmerControl(optimizer = "bobyqa",
                                         optCtrl = list("maxfun" = 20000)),
                  family = binomial, data = fert2)
glmmVar <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                   (1|block/variety),
                 control = glmerControl(optimizer = "bobyqa",
                                        optCtrl = list("maxfun" = 20000)),
                 family = binomial, data = fert2)
@

\noindent These indicate that unique coefficient estimates do not exist.
This is most likely caused by separation, so the output should be
examined for large standard errors. The best solution would be to fit
a simpler model (such as one with fewer interaction terms) or to remove
problematic variables or data. The decision to remove any terms or data
must be justified by prior knowledge and not based on the R output.
If this cannot be justified, then the generalized linear mixed model should
not be used. \\

<<glmms,echo=FALSE,warning=FALSE,message=FALSE,results='hide',cache=TRUE>>=
# Experimenting with different random effects.
# Are all block coefs 0 because they are nonidentified?

glmBin <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2,
              family = binomial, data = fert2)
# Warning message:
# glm.fit: fitted probabilities numerically 0 or 1 occurred
# Residual deviance: 427.939  on 125  degrees of freedom
# 427.939 / 125 = 3.423512

glmQBin <- glm(cbind(infected, total) ~ block*variety + variety*n.trt*status2,
               family = quasibinomial, data = fert2)
# No warnings
# Residual deviance: 427.939  on 125  degrees of freedom
# (Dispersion parameter for quasibinomial family taken to be 3.2817219)

glmmVar <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                   (1|block/variety),
                 control = glmerControl(optimizer = "bobyqa",
                                        optCtrl = list("maxfun" = 20000)),
                 family = binomial, data = fert2)
# Warning messages:
# 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   unable to evaluate scaled gradient
# 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model failed to converge: degenerate  Hessian with 2 negative eigenvalues
# variety:block (Intercept) 0.46633  0.68289
# block         (Intercept) 0.00000  0.00000
# varietySNMS:n.trtLATE SPRING               -18.53042 2535.76041
# varietySNMS:status2CNTL                    -18.50610 2527.55827
# varietySNMS:n.trtEARLY SPRING:status2CNTL   19.11619 2527.55834
# varietySNMS:n.trtLATE SPRING:status2CNTL    19.07429 4381.94303
# deviance df.resid
#    865.7      148
# 865.7 / 148 = 5.8493243

glmmVarPlot <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                       (1|block/variety) + (1|plot),
                     control = glmerControl(optimizer = "bobyqa",
                                            optCtrl = list("maxfun" = 20000)),
                     family = binomial, data = fert2)
# Warning messages:
# 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   unable to evaluate scaled gradient
# 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model failed to converge: degenerate  Hessian with 2 negative eigenvalues# plot          (Intercept) 1.03818  1.0189
# variety:block (Intercept) 0.28324  0.5322
# block         (Intercept) 0.00000  0.0000
# varietySNMS:n.trtLATE SPRING                -20.10372  8008.61084
# varietySNMS:status2CNTL                     -19.96154  7604.01229
# varietySNMS:n.trtEARLY SPRING:status2CNTL    20.93076  7604.01238
# varietySNMS:n.trtLATE SPRING:status2CNTL     20.61822 13745.14025
# deviance df.resid
#    726.8      147
# 726.8 / 147 = 4.9442177

glmmRow <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                   (1|block/row),
                 control = glmerControl(optimizer = "bobyqa",
                                        optCtrl = list("maxfun" = 20000)),
                 family = binomial, data = fert2)
# Warning messages:
# 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   unable to evaluate scaled gradient
# 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model failed to converge: degenerate  Hessian with 3 negative eigenvalues
# row:block (Intercept) 0.46633  0.68289
# block     (Intercept) 0.00000  0.00000
# varietySNMS:n.trtLATE SPRING               -18.52017 2522.79684
# varietySNMS:status2CNTL                    -18.50714 2528.86662
# varietySNMS:n.trtEARLY SPRING:status2CNTL   19.11723 2528.86668
# varietySNMS:n.trtLATE SPRING:status2CNTL    19.06600 4374.54075
# deviance df.resid
#    865.7      148
# 865.7 / 148 = 5.8493243

glmmRowPlot <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                       (1|block/row) + (1|plot),
                     control = glmerControl(optimizer = "bobyqa",
                                            optCtrl = list("maxfun" = 20000)),
                     family = binomial, data = fert2)
# Warning messages:
# 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   unable to evaluate scaled gradient
# 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model failed to converge: degenerate  Hessian with 2 negative eigenvalues
# plot      (Intercept) 1.03818  1.0189
# row:block (Intercept) 0.28324  0.5322
# block     (Intercept) 0.00000  0.0000
# varietySNMS:n.trtLATE SPRING                -20.06813  7867.38080
# varietySNMS:status2CNTL                     -19.95030  7561.42603
# varietySNMS:n.trtEARLY SPRING:status2CNTL    20.91952  7561.42612
# varietySNMS:n.trtLATE SPRING:status2CNTL     20.67575 13394.17908
# deviance df.resid
#    726.8      147
# 726.8 / 147 = 4.9442177

glmmPlot <- glmer(cbind(infected, total) ~ variety*n.trt*status2 + (1|plot),
                  control = glmerControl(optimizer = "bobyqa",
                                         optCtrl = list("maxfun" = 20000)),
                  family = binomial, data = fert2)
# Warning message:
# In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model is nearly unidentifiable: large eigenvalue ratio
#  - Rescale variables?
# plot   (Intercept) 1.3056   1.1426
# varietySNMS:n.trtLATE SPRING              -19.20256  371.85490
# varietySNMS:status2CNTL                   -19.21857  211.30941
# varietySNMS:n.trtEARLY SPRING:status2CNTL  20.44165  211.30904
# varietySNMS:n.trtLATE SPRING:status2CNTL   19.91369  260.18702
# deviance df.resid
#    731.7      149
# 731.7 / 149 = 4.9107383

glmmVarS <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                    (variety|block),
                  control = glmerControl(optimizer = "bobyqa",
                                         optCtrl = list("maxfun" = 20000)),
                  family = binomial, data = fert2)
# Warning messages:
# 1: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   unable to evaluate scaled gradient
# 2: In checkConv(attr(opt, "derivs"), opt$par, ctrl = control$checkConv,  :
#   Model failed to converge: degenerate  Hessian with 3 negative eigenvalues
# block  (Intercept) 0.62664  0.79160
#        varietyPRHN 0.98385  0.99189  -0.933
#        varietySNMS 3.09082  1.75807  -0.713  0.876
#        varietyTAM  0.38672  0.62186  -0.471  0.432  0.162
#        varietyYSTN 0.86358  0.92929  -0.798  0.687  0.277  0.806
# varietySNMS:n.trtLATE SPRING               -18.54752 2546.52186
# varietySNMS:status2CNTL                    -18.51916 2537.53981
# varietySNMS:n.trtEARLY SPRING:status2CNTL   19.13402 2537.53988
# varietySNMS:n.trtLATE SPRING:status2CNTL    19.08471 4406.80309
# deviance df.resid
#    842.8      135
# 842.8 / 135 = 6.2422222

# Compare coefs and SEs
cbind(coef(glmQBin)[c(1,7:13,34:55)], fixef(glmmVar))
cbind(arm::se.coef(glmQBin)[c(1,7:13,34:55)], arm::se.fixef(glmmVar))
# Most of the quasibinomial SEs are less than twice as big as the glmm SEs

# Now with plot-level REs
cbind(coef(glmQBin)[c(1,7:13,34:55)], fixef(glmmVarPlot))
cbind(arm::se.coef(glmQBin)[c(1,7:13,34:55)], arm::se.fixef(glmmVarPlot))
# Pretty similar. Maybe this is ok?
# Mark doesn't like it.
@

<<nosnms,echo=FALSE,warning=FALSE,message=FALSE,results='hide',cache=FALSE>>=
table(fert2$infected==0,fert2$variety)

noSNMS3way <- glmer(cbind(infected, total) ~ variety*n.trt*status2 +
                    (1|block/row), subset = variety != "SNMS",
                    control = glmerControl(optimizer = "bobyqa"),
                    family = binomial, data = fert2)
summary(noSNMS3way)
Anova(noSNMS3way)

noSNMS2way <- glmer(cbind(infected, total) ~ variety*n.trt + variety*status2 +
                    n.trt*status2 + (1|block/row), subset = variety != "SNMS",
                    control = glmerControl(optimizer = "bobyqa"),
                    family = binomial, data = fert2)
summary(noSNMS2way)
Anova(noSNMS2way)

anova(noSNMS2way, noSNMS3way)
@

<<plots3,eval=FALSE,echo=FALSE,warning=FALSE,message=FALSE>>=
par(mfrow = c(2, 2))
plot(resid(glm3way2) ~ predict(glm3way2), col = variety, data = fert2)
plot(resid(glm3way2) ~ fitted(glm3way2), col = variety, data = fert2)
plot(resid(noSNMS3way) ~ predict(noSNMS3way), col = variety,
     data = fert2, subset = variety!="SNMS")
plot(resid(noSNMS3way) ~ fitted(noSNMS3way), col = variety,
     data = fert2, subset = variety!="SNMS")
legend("topright", pch = 1, col = 1:5,
       legend = levels(fert2$variety))
@

\subsection{Model Refinement}

In this section, we describe how to go through the process of model selection. As discussed in the previous sections, we recommend starting with the most complicated three-way interaction model and then assessing which terms can be removed. In general, start by considering removal of the highest order terms. \\

\noindent We'll start by assessing evidence for the three-way interaction term. One way to consider its removal would be to fit a model without the three-way interaction, and then conduct a drop-in-deviance F-test comparing the full and reduced models, as you learned to do in Stat $512$. This method can be time consuming, so instead we recommend using the \verb+Anova+ function in the \verb+car+ package with the option \verb+test="F"+. This provides a {\bf Type II} sums of squares table, and the tests provided are similar to extra sums of squares F-tests based on the Pearson residuals.
%(provide reference here to info about pearson resids vs deviance resids)
The tests in this table are conditional upon terms of the same and lower order being in the model. For example, the \verb+n.trt:status2+ row in the table tests for removal of the $n.trt*status2$ two-way interaction, conditional upon all other two way interactions and main effects being in the model. These tables can be used to assess all the effects at the same level together. If you choose to remove a term, however, it is important to fit a new model and reconsider the Anova table every time a simpler model is selected. This is necessary because the estimate of overdispersion changes when the model changes, causing the tests in the table to change as well. \\

\noindent The Anova table for the three-way interaction model is shown below (Table \ref{3way}). This table should only be used to assess evidence for the three-way interaction term. We recommend the following wording,
\begin{quote}
There is no evidence that the interaction between variety and nitrogen application time differs between inoculated and control plots (p-value$=0.388$ from F-stat$=1.07$ on $8$ and $125$ df).
\end{quote}

<<anovadisplay, echo=TRUE, results='hide'>>=
Anova(glm3way, test="F")
@


<<refine, echo=FALSE, results='asis'>>=
print(xtable(Anova(glm3way, test="F"), caption="Anova table for the $3$ way interaction model.", label="3way"), caption.placement = "top", size='footnotesize', table.placement = getOption("xtable.table.placement", "H"))
@


\noindent If you drop the $3$ way interaction term, the model with all the two-way interactions should be fit and the Anova table analysis should be repeated.

<<anovadisplay2, echo=TRUE, results='hide'>>=
glm2way <- glm(cbind(infected, total) ~ block*variety + variety*n.trt
               + variety*status2+n.trt*status2,
               family = quasibinomial, data = fert.sim1)
Anova(glm2way, test="F")
@

<<refitno3way, echo=FALSE, results='asis'>>=
print(xtable(Anova(glm2way, test="F"), caption="Anova table for the model with all $2$ way interactions.", label="twoway"), caption.placement = "top", size='footnotesize', table.placement = getOption("xtable.table.placement", "H"))
@

\noindent Here is how we would interpret the results in the applicable rows in the above the two-way interaction Anova table (Table \ref{twoway}).
\begin{enumerate}
\item \verb+n.trt:status2+ ``There is no evidence that the relationship between nitrogen application time and the odds of virus infection differs between inoculated and control plots after controlling for all other two way interactions and main effects in the model (p-value$=0.380$ from F-stat$=0.973$ on $2$ and $133$ df).
\item \verb+variety:status2+ ``There is no evidence that the relationship between variety and the odds of virus infection differs between inoculated and control plots after controlling for all other two way interactions and main effects in the model (p-value$=0.304$ from F-stat$=1.22$ on $4$ and $133$ df).
\item \verb+variety:n.trt+ ``There is no evidence that the relationship between nitrogen application time and the odds of virus infection depends on variety after controlling for all other two way interactions and main effects in the model (p-value$=0.478$ from F-stat$=0.950$ on $8$ and $133$ df).
\end{enumerate}

\noindent If you remove another term from the model, refit the simpler model and reassess evidence for each effect. For example, suppose we remove the variety by inoculation status interaction term (Table \ref{remove}). Our assessment of the variety by nitrogen application interaction effect in the following simpler model would be,
\begin{quote}
There is no evidence that the relationship between nitrogen application time and the odds of virus infection depends on variety after controlling for all main effects and the two way interaction between variety and inoculation status (p-value$=0.4536$ from F-stat$=0.98$ on $8$ and $135$ df).
\end{quote}
<<refitno2way, echo=FALSE, results='asis'>>=
glm2way2 <- glm(cbind(infected, total) ~ block*variety + variety*n.trt
               + variety*status2,
               family = quasibinomial, data = fert.sim1)
print(xtable(Anova(glm2way2, test="F"), caption="Anova table for the model with two way interactions between variety and nitrogen and variety and inoculation status.", label="remove"), caption.placement = "top", size='footnotesize', table.placement = getOption("xtable.table.placement", "H"))
@

<<refitno2way3, echo=FALSE, results='asis', include=FALSE>>=
glm2way3 <- glm(cbind(infected, total) ~ block*variety + variety*n.trt,
               family = quasibinomial, data = fert.sim1)
print(xtable(Anova(glm2way3, test="F"), caption="Anova table for the model with a two way interaction between variety and nitrogen application time."), caption.placement = "top", table.placement = getOption("xtable.table.placement", "H"))
@

\noindent If no evidence is found for any of the interactions, the simplest model we recommend fitting should contain the $block*variety$ interaction and all main effects (Table \ref{simple}). Note, it is not appropriate to consider removal of any of the terms involving block. Block to block variability is expected because it was included as a design variable, and so it should be included in the model. The $block*variety$ interaction also needs to be included to account for the nesting structure in the design. \\

\noindent To assess evidence for the \verb+n.trt+ effect in the simplest recommended model, we would say,
\begin{quote}
There is no evidence that the odds of virus infection depends on nitrogen application time after controlling for block, variety, inoculation status, and the $block*variety$ interaction (p-value$=0.612$ from F-stat$=0.49$ on $2$ and $147$ df).
\end{quote}

<<glmnointeractions, echo=TRUE, results='hide'>>=
glmnointeractions <- glm(cbind(infected, total) ~ block*variety + variety + n.trt + status2,
               family = quasibinomial, data = fert.sim1)
Anova(glmnointeractions, test="F")
@

<<glmnointeractions2, echo=FALSE, results='asis'>>=
print(xtable(Anova(glmnointeractions, test="F"), caption="Anova table for the model with no interactions.", label="simple"), caption.placement="top", size='footnotesize', table.placement = getOption("xtable.table.placement", "H"))
@

\noindent The next section describes how to interpret effects once a model is selected.

<<dropindevftest, echo=FALSE>>=
glm.no3way <- glm(cbind(infected, total) ~ block*variety + variety*n.trt + n.trt*status2 + variety*status2,
               family = quasibinomial, data = fert.sim1)
#drop in dev F-test
#((196-185)/8)/(185/125)
#0.929
#1-pf(0.929, 11, 125)
#0.512
@



\subsection{Interpretation}

\noindent In this section, we describe how to interpret effects if evidence of a three-way interaction is found. The effects plots in the \verb+effects+ packages provide nice visuals for displaying estimated probabilities of infection across levels of multiple variables.

\begin{figure}[!h]
<<plots2,echo=FALSE,warning=FALSE,message=FALSE,out.height='0.5\\linewidth',fig.height=5, fig.align='center'>>=
require(effects)
plot(Effect(c("variety", "n.trt", "status2"), glm3way),
     multiline = TRUE, type = "response", se = TRUE, ci.style="bars",
     x.var = "n.trt", rotx = 45, layout = c(5, 1),
     main = "Variety/Treatment/Inoculation Effects Plot",
     xlab = "Nitrogen Application Date", ylab = "Infection Probability",
     key.args = list(title = "Inoculation Status"))
@
\caption{The fitted model can be nicely summarized with plots from the \texttt{effects} package.}
\end{figure}

\noindent The \verb+Effect+ function is convenient because it provides the estimated probabilities at each treatment combination, averaged over all blocks. The results are  provided in a organized table (see below).

<<summary, echo=TRUE>>=
Effect(c("variety", "n.trt", "status2"), glm3way, se=TRUE)
@

\noindent We recommend displaying the effects plot and output and then describing the effects of interest in words. When describing the effects in words, we recommend describing the effects in terms of multiplicative changes in the odds of virus infection. It is more straightforward to calculate confidence intervals when effects are described are this scale rather than the probability scale. We recommend changing the reference level of the model to find the estimates and confidence intervals for the effects of interest. Notice that when we fit the model in Section \ref{model}, we specified the constraint that the sum of the block effects would add to $0$. As a result, the estimated effects given in the model summary are the effects averaged over all blocks. \\

\noindent You can start by looking at the summary of the model, \verb+summary(glm3way)+. The coefficients of interest will be those found in the rows \verb+n.trtEARLY SPRING+ and \verb+n.trtLATE SPRING+. Below we show how to interpret these coefficients in words, and how the meaning changes when the reference level is manipulated.

<<first, echo=TRUE, message=FALSE>>=
#use the default reference level to describe the effects across
#nitrogen application for inoculated plants of variety 1 (averaged over blocks)
exp(coef(glm3way)[11])
exp(confint(glm3way, 11))
exp(coef(glm3way)[12])
exp(confint(glm3way, 12))
@

\noindent For these data, we would describe the nitrogen application effect for inoculated plants of variety $1$ as follows:
\begin{quote}
For inoculated plants of variety $1$, the odds of virus infection when nitrogen is applied in the early spring is estimated to be $3.01$ times the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from  $0.295$ to $104.9$ times. For inoculated plants of variety $1$, the odds of virus infection when nitrogen is applied in the late spring is estimated to be $5.05$ times the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from $0.652$ to $166.4$ times.
\end{quote}

<<second, echo=TRUE, message=FALSE, eval=FALSE>>=
#suppose we want to the effects of introgen application for
#inoculated plants of variety 3
#first relevel
var3 <- relevel(fert.sim1$variety, "Var3")
#then fit model with var3
glm.refvar3 <- glm(cbind(infected, total) ~ block/var3 + var3*n.trt*status2,
               family = quasibinomial, data = fert.sim1)
#interpret results
exp(coef(glm.refvar3)[11])
exp(confint(glm.refvar3, 11))
exp(coef(glm.refvar3)[12])
exp(confint(glm.refvar3, 12))

#now suppose we want to the effects of introgen application for
#non-inoculated plants of variety 3
#first relevel the status variable
statuscntl <- relevel(fert.sim1$status2, "CNTL")
#then fit model with var3
glm.refvar3cntl <- glm(cbind(infected, total) ~ block/var3 + var3*n.trt*statuscntl,
               family = quasibinomial, data = fert.sim1)
#interpret results
exp(coef(glm.refvar3cntl)[11])
exp(confint(glm.refvar3cntl, 11))
exp(coef(glm.refvar3cntl)[12])
exp(confint(glm.refvar3cntl, 12))
@


\noindent We would describe the nitrogen application effect for inoculated plants of variety $3$ as follows:
\begin{quote}
For inoculated plants of variety $3$, the odds of virus infection when nitrogen is applied in the early spring is estimated to be about equal to the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from  $0.191$ to $5.28$ times. For inoculated plants of variety $3$, the odds of virus infection when nitrogen is applied in the late spring is estimated to be $1.24$ times the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from $0.269$ to $6.201$ times.
\end{quote}

\noindent We would describe the nitrogen application effect for non-inoculated plants of variety $3$ as follows:
\begin{quote}
For non-inoculated plants of variety $3$, the odds of virus infection when nitrogen is applied in the early spring is estimated to be $2.3$ times the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from  $0.797$ to $7.72$ times. For non-inoculated plants of variety $3$, the odds of virus infection when nitrogen is applied in the late spring is estimated to be $1.45$ times the odds of virus infection when nitrogen is applied in the fall, with a $95\%$ likelihood-based confidence interval from $0.446$ to $5.16$ times.
\end{quote}


\section{Scope of inference}

The field where the study took place was not randomly selected from a larger population of fields, so inference from this study does not extend beyond the field at the base of the Bridger mountains where the experiment was conducted. There are potential confounding factors in this field that may not be present in other fields around Montana. For example, the soil in this specific field may have high starting levels of nitrogen from previous studies that could affect the observed relationship between nitrogen application time and probability of virus infection. If inference beyond the study field is desired, it would be necessary to justify that the study field is similar to other wheat fields in the population of interest in terms of soil composition and all other variables. \\

\noindent Plants were randomly assigned to treatments, so it is justified to infer that the observed infection rates in this field are caused by the timing of the nitrogen application and the inoculation status of the plots. A causal relationship {\it cannot} be inferred between variety and virus infection, however, because plants were not randomly assigned to varieties.

\section{Additional Comments}
\noindent While very low infection rates are, in practice, a desirable
result, they present technical and computational problems for analysis.
In similar future studies, the sample size should be large enough that
the researchers expect at least one infected leaf to be found in each plot.
Additionally we recommend placing the inoculated plants at random locations
within the plots, and collecting leaves from a simple random sample of
locations in each plot.

\section{Appendix: R Code}
\noindent Since Nar expressed a desire for assistance with R, we have
included the code we used to create the output for this report. Note
that we used a simulated dataset.

\subsection{Data Preprocessing}
We changed the baseline levels of \verb|n.application| and \verb|status|.
If the YLST variety is the primary variety of interest, the \verb|relevel|
function could be used on the \verb|variety| variable the same way.
<<fakepre,eval=FALSE>>=
@

\subsection{\texttt{qplot}}
<<interactionplot,eval=FALSE>>=
@

\subsection{Heatmap}
Nar only needs to change \verb|fert.sim1| inside the \verb|arrange| call
to the name of his data frame. The rest of this code is self-contained and
will create the heatmap with appropriate labels for varieties, treatments,
and blocks.
<<heatmap,eval=FALSE>>=
@

\subsection{Summary Effects Plot}
<<plots2,eval=FALSE>>=
@

\pagebreak
\section{References}
%\noindent Ramsey, F.L., Schafer, D.W. (2013). {\it The Statistical Sleuth: A Course in Methods of Data Analysis, Third Edition}. Boston, MA: Brooks/Cole, Cengage Learning.\\

\noindent Gelman, A. and Hill, J. (2007). {\it Data Analysis Using
Regression and Multilevel/Hierarchical Models}. New York, NY: Cambridge
University Press.\\

%\noindent Philippi, Tom. "Topic 2(b) GRTS Spatial Sampling (for Monitoring)." GRTS Spatial Sampling (for Monitoring). Web. 17 Feb. 2015. \\
%http://science.nature.nps.gov/im/datamgmt/statistics/r/advanced/grts.cfm. \\

%\noindent Barbour, Christopher, and Wright, Wilson. ``Consulting Report''. Manuscript, 2014.

\noindent Ramsey, F.L., Schafer, D.W. (2013). {\it The Statistical Sleuth: A Course in Methods of Data Analysis, Third Edition}. Boston, MA: Brooks/Cole, Cengage Learning.\\

\noindent Sloderbeck, J., Michaud, P., Whitworth, Robert. ``Wheat Pests.'' CurlMite. Kansas State University, 1 May 2008. Web. 18 Sept. 2015.\\
{\footnotesize\verb|http://entomology.k-state.edu/extension/insect-information/crop-pests/wheat/curlmite.html|.}

\end{document}
